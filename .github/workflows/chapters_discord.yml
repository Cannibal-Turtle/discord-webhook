name: Check RSS & Send Chapters

on:
  repository_dispatch:
    types: [trigger-discord-notify]
  schedule:
    - cron: '0 15 * * *'      # daily at 15:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  free_chapters:
    # only cancel a prior FREE run, not the PAID one
    concurrency:
      group: rss-to-discord-free-chapters
      cancel-in-progress: false

    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'free')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install discord.py feedparser python-dateutil

      - name: Run Free Chapters Bot
        timeout-minutes: 5
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_FREE_CHAPTERS_CHANNEL: ${{ secrets.DISCORD_FREE_CHAPTERS_CHANNEL }}
        run: python bot_free_chapters.py

      - name: Sync & commit state_rss.json
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the remote copy of state_rss.json
          git fetch origin main
          git show origin/main:state_rss.json > state_remote.json

          # Merge remote+local into a single JSON
          python3 - << 'PYCODE'
import json
remote = json.load(open('state_remote.json', encoding='utf-8'))
local  = json.load(open('state_rss.json',   encoding='utf-8'))
merged = { **remote, **local }
with open('state_rss.json', 'w', encoding='utf-8') as f:
    json.dump(merged, f, indent=2, ensure_ascii=False)
PYCODE

          # Commit only if it changed
          git add state_rss.json
          if git diff --cached --quiet; then
            echo "No state changes to commit."
          else
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "ci: update state_rss.json"
            git push origin main
          fi

  paid_chapters:
    # only cancel a prior PAID run, not the FREE one
    concurrency:
      group: rss-to-discord-paid-chapters
      cancel-in-progress: false

    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'repository_dispatch' && github.event.client_payload.feed == 'paid')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install discord.py feedparser python-dateutil

      - name: Run Paid Chapters Bot
        timeout-minutes: 5
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_ADVANCE_CHAPTERS_CHANNEL: ${{ secrets.DISCORD_ADVANCE_CHAPTERS_CHANNEL }}
        run: python bot_paid_chapters.py

      - name: Sync & commit state_rss.json
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the remote copy of state_rss.json
          git fetch origin main
          git show origin/main:state_rss.json > state_remote.json

          # Merge remote+local into a single JSON
          python3 - << 'PYCODE'
import json
remote = json.load(open('state_remote.json', encoding='utf-8'))
local  = json.load(open('state_rss.json',   encoding='utf-8'))
merged = { **remote, **local }
with open('state_rss.json', 'w', encoding='utf-8') as f:
    json.dump(merged, f, indent=2, ensure_ascii=False)
PYCODE

          # Commit only if it changed
          git add state_rss.json
          if git diff --cached --quiet; then
            echo "No state changes to commit."
          else
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "ci: update state_rss.json"
            git push origin main
          fi
